// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id            String @id @default(uuid())
  name          String
  district      String
  province      String
  departament   String
  business_name String
  RUC           Int
  contact       Json[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    User?  @relation(fields: [user_id], references: [id])
  user_id String

  projects Project[]
}

// contact: [
//   {
//     name: string,
//     phone: int,
//     mail: string,
//   }
// ]

model User {
  id                String  @id @default(uuid())
  name              String
  email             String  @unique
  pw_hash           String  @unique
  company           String?
  business_name     String?
  profession        String?
  RUC               Int?
  verification_code Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  projects Project[]
  clients  Client[]
  supplies UserSupply[]
}

enum Currency {
  USD
  PEN
}

enum ProjectStatus {
  progress
  revision
  rejected
  approved
}

model Project {
  id             String        @id @default(uuid())
  name           String
  permissions    Json
  currency       Currency
  code           String
  direct_cost    Int
  status         ProjectStatus @default(progress)
  address        String
  district       String
  province       String
  department     String
  initial_budget Float
  workday        Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  author    User?  @relation(fields: [author_id], references: [id])
  author_id String

  client    Client? @relation(fields: [client_id], references: [id])
  client_id String?

  supplies      ProjectSupply[]
  budget_blocks BudgetBlock[]
}

// permission: {
//  edit : [user_id]
//  comment : [user_id]
//  view: [user_id]
// }

model BudgetBlock {
  id   String @id @default(uuid())
  code String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  project    Project?             @relation(fields: [project_id], references: [id])
  project_id String
  versions   BudgetBlockVersion[]
}

model BudgetBlockVersion {
  id   Int    @id @default(autoincrement())
  code String
  name String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  budget_block    BudgetBlock? @relation(fields: [budget_block_id], references: [id])
  budget_block_id String?
}

//--------------
//supply models
//--------------
model Supply {
  id               String @id @default(uuid())
  name             String
  price            Float
  image            String
  url              String
  measurement_unit String
  type             String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ProjectSupply {
  id               String @id @default(uuid())
  name             String
  price            Float
  image            String
  url              String
  measurement_unit String
  type             String

  source_supply_id String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  project    Project? @relation(fields: [project_id], references: [id])
  project_id String
}

model UserSupply {
  id               String @id @default(uuid())
  name             String
  price            Float
  image            String
  url              String
  measurement_unit String
  type             String

  source_supply_id String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    User?  @relation(fields: [user_id], references: [id])
  user_id String
}

model UnifiedIndex {
  id    String @id @default(uuid())
  name  String
  index Int
}
